#Useful notes
file_handle = open('example.fasta', 'r')
file_handle.read(3)

os.getcwd() 

file_write = open('example_write.fasta', 'w')
file_write.close()

import this

a=range(1,100,5)
[x+y for x,y in zip(a,a)]

dir('apple') # give a list of all the methods for the string
combined_str = ','.join(['one','two','three'])
combined_str.split(',')
help('apple'.join)
combined_str.replace('r','R')

my_list = [1,2,3]
my_list.append(4)
my_list.append(4)
my_list.append(4)
my_list.remove(4) # remove the first 4
my_list.reverse()

','.join('apple') # treats the string like a list

my_set = set([1,2,3,4,4,4,5,6,7, 'a'])
5 in my_set
set('apples and bananas') # list of unique characters, treat string as list

my_dict = {'a': 1, 'c': 3, 'b': 2}
my_dict['b']
'a' in my_dict
del my_dict['a']

# flow control
reader = open('fruits.txt', 'r')
line = reader.readline()
while line != '':
    if line[0] in set(['A', 'E', 'I', 'O', 'U']):
        print 'I am an', line
    else:
        print 'I am a', line
    line = reader.readline()

# functions
def sum_two_numbers(first_number, second_number):
    result = first_number + second_number
    return result

import filename_of_functions
filename_of_functions.function() # how to call one of the functions

# classes
import rodent
x = rodent.Rodent('A1234', 6)
x.is_large()

### testing
# make sure that the tests don't have lots of repeated code -- use lists of lists and loops
test=[['a','a','True'],['ctg','t','False']]
import py_functions
for (i, (seq,prefix, expected)) in enumerate(test):
    print i
py_functions.dna_starts_with(

nosetests -- python testing program (not part of python -- needs separate installation)

None -- python's NULL

Testing Exceptions
try/except

# version control
# git branching
git branch # lists all the available branches. The one prefixed with "*" is the branch on which the local repo is currently on
git branch remove_caching
git checkout remove_caching
git add dna_string.py
git commit -m "Removing caching"
# merge to master branch
git checkout master  # reverted back to original state
git merge remove_caching
git branch -D remove_caching  # now that changes are ok and have been merged can delete branexperimental_testingch

# Documentation

sphynx -- for bigger docs

# Makefile
N.B. makefile needs tabs not spaces!

To run make over many files, use wildcards
%.fasta.aln: %.fasta
    muscle -in $< -out $@
'%' is a wildcard, like *
'$<' is the input file, and '$@' is the output file


# NECTAR TRAINING COURSE
nectar notes
====== =====

www.nectar.org.au/research-cloud
accessed via AAF (Australian Access Federation -- requires institutional subscription)

https://dashboard.rc.nectar.org.au

in windows 
- use puttygen to generate ssh key-pairs
- use pageant to manage private keys


on nectar, one can include a post-creation script to be run on each instance

Jerico: how to access the cloud via software
============================================

OpenStack APIs
--------------
Swift

Object storage
#> sudo pip install python-swiftclient
#> swift post MyFirstContainer
#> swift list
#> swift upload MyFirstContainer notes.txt
#> swift download MyFirstContainer notes.txt
swift is not like a filesystem, more like a DB. can't be mounted, but objects can be sent/received. Apparently can be used with hadoop

Glance 

Used to interface with nectar API, manage images
download openstack Rc file (then run it)
reset password (or get APi password)
source ./pt-3451-openrc.sh
# upload the custom image downloaded from ubuntu server images
glance image-create --name="ubuntu_saucy" --is-public=false --container=bare --disk-format=qcow2 <~/saucy-server-cloudimg-amd64-disk1.img
glance image-show af322da3-2264-40f9-8be2-cc3141c2aa66

Nova

Launches VMs on nectar
sudo pip install python-novaclient
nova list # give a list of VMs on the server
nova delete 6ca756cf-0411-4bc7-a27e-28ebe6a507be #delete the VM we made earlier by the dashboard	
nova availability-zone-list
nova secgroup-list # list the security groups
nova keypair-list
nova flavor-list
nova boot --image af322da3-2264-40f9-8be2-cc3141c2aa66 --key-name angusw_218 --security-groups ssh --availability-zone monash --flavor m1.medium --user-data post-boot-script.sh MySecondVM 

Cinder

# volume management
sudo pip install python-cinderclient
